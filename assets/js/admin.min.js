/*!
app.js
(c) 2020 IG PROG, www.igprog.hr
*/
angular.module("admin", ["ngStorage", "pascalprecht.translate", "ngMaterial"]).config(["$httpProvider", "$translateProvider", "$translatePartialLoaderProvider", (t, e, r) => { e.useLoader("$translatePartialLoader", { urlTemplate: "./assets/json/translations/{lang}/{part}.json" }), e.preferredLanguage("hr"), r.addPart("main"), e.useSanitizeValueStrategy("escape"), t.defaults.headers.get || (t.defaults.headers.get = {}), t.defaults.headers.get["If-Modified-Since"] = "Mon, 26 Jul 1997 05:00:00 GMT", t.defaults.headers.get["Cache-Control"] = "no-cache", t.defaults.headers.get.Pragma = "no-cache" }]).factory("f", ["$http", t=>({ post: (e, r, a) =>t({ url: "./" + e + ".asmx/" + r, method: "POST", data: a }).then(t=>JSON.parse(t.data.d), t=>t.data.d) })]).controller("adminCtrl", ["$scope", "$http", "f", "$sessionStorage", "$translate", (t, e, r, a, n) => { var o = void 0 !== a.islogin && a.islogin, l = { admin: { userName: null, password: null }, isLogin: o, inquiries: null, loading: !1, productGroups: [], products: [] }; t.d = l; e.get("../config/config.json").then(function (e) { t.config = e.data }), t.toggleTpl = (e=> { t.tpl = e }), t.f = { login: t=>d(t), logout: () =>i(), signup: (t, e) =>signup(t, e) }; var d = e=> { r.post("Admin", "Login", { username: e.userName, password: e.password }).then(e=> { t.d.isLogin = e, a.islogin = e, !0 === e && t.toggleTpl("info") }) }, i = () => { t.d.isLogin = !1, a.islogin = null, t.toggleTpl("login") }; o ? t.toggleTpl("info") : t.toggleTpl("login") }]).controller("productGroupsCtrl", ["$scope", "$http", "f", (t, e, r) => { var a = "ProductGroups"; t.d = { loading: !1, records: [] }; t.d.loading = !0, r.post(a, "Load", {}).then(e=> { t.d.records = e, t.d.loading = !1 }); t.f = { init: () => { r.post(a, "Init", {}).then(e=> { t.d.records.push(e) }) }, save: e=>(e=> { r.post(a, "Save", { x: e }).then(e=> { t.d.records = e }) })(e), get: () =>get(), remove: e=>(e=> { confirm("Briši grupu?") && r.post(a, "Delete", { x: e }).then(e=> { t.d.records = e }) })(e) } }]).controller("productsCtrl", ["$scope", "$http", "f", "$mdDialog", (t, e, r, a) => { var n = "Products"; t.d = { loading: !1, productGroups: [], records: [], currProduct: null }; t.d.loading = !0, r.post("ProductGroups", "Load", {}).then(e=> { t.d.productGroups = e, t.d.loading = !1 }); var o = () => { r.post(n, "Load", { lang: "hr" }).then(e=> { t.d.records = e }) }; o(); var l = t=> { r.post(n, "LoadProductGallery", { productId: t.id }).then(e=> { t.gallery = e }) }, d = function (t, e, r, a, n) { var o = () => { n.post("Tran", "Init", {}).then(e=> { t.d = { tran: e, data: a.data, langs: [{ id: null, lang: "en", tran: null }, { id: null, lang: "ru", tran: null }] }, t.d.tran.productId = a.data.id, t.d.tran.recordType = a.type, angular.forEach(t.d.langs, function (e, r) { n.post("Tran", "Get", { productId: a.data.id, recordType: a.type, lang: e.lang }).then(e=> { e.length > 0 && (t.d.langs[r].id = e[0].id, t.d.langs[r].tran = e[0].tran) }) }) }) }; o(); t.cancel = function () { e.cancel() }, t.confirm = function (t, e) { ((t, e) => { t.tran.id = e.id, t.tran.tran = e.tran, t.tran.lang = e.lang, console.log(t.tran), n.post("Tran", "Save", { x: t.tran }).then(t=> { o() }) })(t, e) } }; t.f = { load: () =>o(), save: e=>(e=> { r.post(n, "Save", { x: e }).then(e=> { t.d.records = e }) })(e), upload: (t, r) =>((t, r) => { var a = new FormData(document.getElementById("formUpload_" + t.id)); e({ url: "../UploadHandler.ashx", method: "POST", headers: { "Content-Type": void 0 }, data: a }).then(function (e) { l(t) }, function (t) { alert(t.data.d) }) })(t), deleteImg: (e, a) =>((e, a) => { confirm("Briši sliku?") && r.post(n, "DeleteImg", { productId: e.id, img: a }).then(e=> { t.d.records = e }) })(e, a), newProduct: () => { r.post(n, "Init", {}).then(e=> { t.d.records.push(e) }) }, remove: e=>(e=> { confirm("Briši proizvod?") && r.post(n, "Delete", { x: e }).then(e=> { t.d.records.push(e) }) })(e), setMainImg: (e, a) =>((e, a) => { r.post(n, "SetMainImg", { productId: e.id, img: a }).then(e=> { t.d.records = e }) })(e, a), openTranPopup: (t, e) =>(function (t, e) { a.show({ controller: d, templateUrl: "./assets/partials/popup/tran.html", parent: angular.element(document.body), clickOutsideToClose: !0, d: { data: t, type: e } }).then(function (t) { }, function () { }) })(t, e) } }]).controller("infoCtrl", ["$scope", "$http", "f", "$mdDialog", (t, e, r, a) => { r.post("Info", "Load", { lang: null }).then(e=> { t.d = e }); var n = function (t, e, r, a, n) { var o = () => { n.post("Tran", "Init", {}).then(e=> { t.d = { tran: e, data: a.data, langs: [{ id: null, lang: "en", tran: null }, { id: null, lang: "ru", tran: null }] }, t.d.tran.productId = null, t.d.tran.recordType = a.type, angular.forEach(t.d.langs, function (e, r) { n.post("Tran", "Get", { productId: null, recordType: a.type, lang: e.lang }).then(e=> { e.length > 0 && (t.d.langs[r].id = e[0].id, t.d.langs[r].tran = e[0].tran) }) }) }) }; o(); t.cancel = function () { e.cancel() }, t.confirm = function (e, r) { ((e, r) => { t.d.tran.id = r.id, t.d.tran.tran = r.tran, t.d.tran.lang = r.lang, n.post("Tran", "Save", { x: e.tran }).then(t=> { o() }) })(e, r) } }; t.f = { save: e=>(e=> { r.post("Info", "Save", { x: e }).then(e=> { t.d = e }) })(e), upload: t=>upload(t), openTranPopup: (t, e) =>(function (t, e) { a.show({ controller: n, templateUrl: "./assets/partials/popup/tran.html", parent: angular.element(document.body), clickOutsideToClose: !0, d: { data: t, type: e } }).then(function (t) { }, function () { }) })(t, e) } }]).controller("optionsCtrl", ["$scope", "$http", "f", (t, e, r) => { t.d = { loading: !1, records: [] }; (e=> { t.d.loading = !0, r.post("Options", "Load", { type: e }).then(e=> { t.d.records = e, t.d.loading = !1 }) })(null); t.f = { add: () => { t.d.records.push({}) }, save: e=>(e=> { r.post("Options", "Save", { x: e }).then(e=> { t.d.records = e }) })(e), remove: (t, e) =>((t, e) => { confirm("Briši opciju?") && t.splice(e, 1) })(t, e) } }]).controller("uploadCtrl", ["$scope", "$http", "f", (t, e, r) => { t.f = { upload: t=>(t=> { var r = new FormData(document.getElementById("formUpload_" + t)); e({ url: "../UploadHandler.ashx", method: "POST", headers: { "Content-Type": void 0 }, data: r }).then(function (t) { location.reload(!0) }, function (t) { alert(t.data.d) }) })(t), removeMainImg: t=>(t=> { confirm("Briši proizvod?") && r.post("Info", "DeleteMainImg", { img: t }).then(t=> { location.reload(!0) }) })(t) } }]).directive("detailsDirective", () =>({ restrict: "E", scope: { service: "=", desc: "=", img: "=", price: "=" }, templateUrl: "./assets/partials/directive/details.html" })).directive("navbarDirective", () =>({ restrict: "E", scope: { site: "=" }, templateUrl: "./assets/partials/directive/navbar.html" })).directive("cardDirective", () =>({ restrict: "E", scope: { service: "=", desc: "=", link: "=" }, templateUrl: "./assets/partials/directive/card.html" })).directive("uploadDirective", () =>({ restrict: "E", scope: { id: "=", img: "=" }, templateUrl: "./assets/partials/directive/upload.html", controller: "uploadCtrl" })).directive("loadingDirective", () =>({ restrict: "E", scope: { btntitle: "=", loadingtitle: "=", value: "=", pdf: "=", size: "=" }, templateUrl: "./assets/partials/directive/loading.html" })).directive("jsonDirective", () =>({ restrict: "E", scope: { data: "=", debug: "=" }, templateUrl: "./assets/partials/directive/json.html", controller: "jsonCtrl" })).controller("jsonCtrl", ["$scope", t=> { t.isShow = !1, t.show = (() => { t.isShow = !t.isShow }) }]).directive("tranBtn", () =>({ restrict: "E", scope: {}, templateUrl: "./assets/partials/directive/tranbtn.html" })).directive("allowOnlyNumbers", function () { return { restrict: "A", link: function (t, e, r, a) { e.on("keydown", function (t) { var e = $(this), r = e.val(); return r = r.replace(",", "."), e.val(r), 64 !== t.which && 16 !== t.which && (t.which >= 48 && t.which <= 57 || (t.which >= 96 && t.which <= 105 || ([8, 13, 27, 37, 38, 39, 40].indexOf(t.which) > -1 || (110 === t.which || 188 === t.which || 190 === t.which || (46 === t.which || (t.preventDefault(), !1)))))) }) } } });